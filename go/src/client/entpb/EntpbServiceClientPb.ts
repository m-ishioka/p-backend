/**
 * @fileoverview gRPC-Web generated client stub for entpb
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.12.4
// source: entpb/entpb.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as entpb_entpb_pb from '../entpb/entpb_pb';
import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';


export class ProcessTypeServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/entpb.ProcessTypeService/Create',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.CreateProcessTypeRequest,
    entpb_entpb_pb.ProcessType,
    (request: entpb_entpb_pb.CreateProcessTypeRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.ProcessType.deserializeBinary
  );

  create(
    request: entpb_entpb_pb.CreateProcessTypeRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.ProcessType>;

  create(
    request: entpb_entpb_pb.CreateProcessTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ProcessType) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.ProcessType>;

  create(
    request: entpb_entpb_pb.CreateProcessTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ProcessType) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProcessTypeService/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProcessTypeService/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorGet = new grpcWeb.MethodDescriptor(
    '/entpb.ProcessTypeService/Get',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.GetProcessTypeRequest,
    entpb_entpb_pb.ProcessType,
    (request: entpb_entpb_pb.GetProcessTypeRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.ProcessType.deserializeBinary
  );

  get(
    request: entpb_entpb_pb.GetProcessTypeRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.ProcessType>;

  get(
    request: entpb_entpb_pb.GetProcessTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ProcessType) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.ProcessType>;

  get(
    request: entpb_entpb_pb.GetProcessTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ProcessType) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProcessTypeService/Get',
        request,
        metadata || {},
        this.methodDescriptorGet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProcessTypeService/Get',
    request,
    metadata || {},
    this.methodDescriptorGet);
  }

  methodDescriptorUpdate = new grpcWeb.MethodDescriptor(
    '/entpb.ProcessTypeService/Update',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.UpdateProcessTypeRequest,
    entpb_entpb_pb.ProcessType,
    (request: entpb_entpb_pb.UpdateProcessTypeRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.ProcessType.deserializeBinary
  );

  update(
    request: entpb_entpb_pb.UpdateProcessTypeRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.ProcessType>;

  update(
    request: entpb_entpb_pb.UpdateProcessTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ProcessType) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.ProcessType>;

  update(
    request: entpb_entpb_pb.UpdateProcessTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ProcessType) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProcessTypeService/Update',
        request,
        metadata || {},
        this.methodDescriptorUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProcessTypeService/Update',
    request,
    metadata || {},
    this.methodDescriptorUpdate);
  }

  methodDescriptorDelete = new grpcWeb.MethodDescriptor(
    '/entpb.ProcessTypeService/Delete',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.DeleteProcessTypeRequest,
    google_protobuf_empty_pb.Empty,
    (request: entpb_entpb_pb.DeleteProcessTypeRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  delete(
    request: entpb_entpb_pb.DeleteProcessTypeRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  delete(
    request: entpb_entpb_pb.DeleteProcessTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  delete(
    request: entpb_entpb_pb.DeleteProcessTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProcessTypeService/Delete',
        request,
        metadata || {},
        this.methodDescriptorDelete,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProcessTypeService/Delete',
    request,
    metadata || {},
    this.methodDescriptorDelete);
  }

  methodDescriptorList = new grpcWeb.MethodDescriptor(
    '/entpb.ProcessTypeService/List',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.ListProcessTypeRequest,
    entpb_entpb_pb.ListProcessTypeResponse,
    (request: entpb_entpb_pb.ListProcessTypeRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.ListProcessTypeResponse.deserializeBinary
  );

  list(
    request: entpb_entpb_pb.ListProcessTypeRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.ListProcessTypeResponse>;

  list(
    request: entpb_entpb_pb.ListProcessTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ListProcessTypeResponse) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.ListProcessTypeResponse>;

  list(
    request: entpb_entpb_pb.ListProcessTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ListProcessTypeResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProcessTypeService/List',
        request,
        metadata || {},
        this.methodDescriptorList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProcessTypeService/List',
    request,
    metadata || {},
    this.methodDescriptorList);
  }

  methodDescriptorBatchCreate = new grpcWeb.MethodDescriptor(
    '/entpb.ProcessTypeService/BatchCreate',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.BatchCreateProcessTypesRequest,
    entpb_entpb_pb.BatchCreateProcessTypesResponse,
    (request: entpb_entpb_pb.BatchCreateProcessTypesRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.BatchCreateProcessTypesResponse.deserializeBinary
  );

  batchCreate(
    request: entpb_entpb_pb.BatchCreateProcessTypesRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.BatchCreateProcessTypesResponse>;

  batchCreate(
    request: entpb_entpb_pb.BatchCreateProcessTypesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.BatchCreateProcessTypesResponse) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.BatchCreateProcessTypesResponse>;

  batchCreate(
    request: entpb_entpb_pb.BatchCreateProcessTypesRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.BatchCreateProcessTypesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProcessTypeService/BatchCreate',
        request,
        metadata || {},
        this.methodDescriptorBatchCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProcessTypeService/BatchCreate',
    request,
    metadata || {},
    this.methodDescriptorBatchCreate);
  }

}

export class ProjectServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/entpb.ProjectService/Create',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.CreateProjectRequest,
    entpb_entpb_pb.Project,
    (request: entpb_entpb_pb.CreateProjectRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.Project.deserializeBinary
  );

  create(
    request: entpb_entpb_pb.CreateProjectRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.Project>;

  create(
    request: entpb_entpb_pb.CreateProjectRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.Project) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.Project>;

  create(
    request: entpb_entpb_pb.CreateProjectRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.Project) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProjectService/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProjectService/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorGet = new grpcWeb.MethodDescriptor(
    '/entpb.ProjectService/Get',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.GetProjectRequest,
    entpb_entpb_pb.Project,
    (request: entpb_entpb_pb.GetProjectRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.Project.deserializeBinary
  );

  get(
    request: entpb_entpb_pb.GetProjectRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.Project>;

  get(
    request: entpb_entpb_pb.GetProjectRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.Project) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.Project>;

  get(
    request: entpb_entpb_pb.GetProjectRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.Project) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProjectService/Get',
        request,
        metadata || {},
        this.methodDescriptorGet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProjectService/Get',
    request,
    metadata || {},
    this.methodDescriptorGet);
  }

  methodDescriptorUpdate = new grpcWeb.MethodDescriptor(
    '/entpb.ProjectService/Update',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.UpdateProjectRequest,
    entpb_entpb_pb.Project,
    (request: entpb_entpb_pb.UpdateProjectRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.Project.deserializeBinary
  );

  update(
    request: entpb_entpb_pb.UpdateProjectRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.Project>;

  update(
    request: entpb_entpb_pb.UpdateProjectRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.Project) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.Project>;

  update(
    request: entpb_entpb_pb.UpdateProjectRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.Project) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProjectService/Update',
        request,
        metadata || {},
        this.methodDescriptorUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProjectService/Update',
    request,
    metadata || {},
    this.methodDescriptorUpdate);
  }

  methodDescriptorDelete = new grpcWeb.MethodDescriptor(
    '/entpb.ProjectService/Delete',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.DeleteProjectRequest,
    google_protobuf_empty_pb.Empty,
    (request: entpb_entpb_pb.DeleteProjectRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  delete(
    request: entpb_entpb_pb.DeleteProjectRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  delete(
    request: entpb_entpb_pb.DeleteProjectRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  delete(
    request: entpb_entpb_pb.DeleteProjectRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProjectService/Delete',
        request,
        metadata || {},
        this.methodDescriptorDelete,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProjectService/Delete',
    request,
    metadata || {},
    this.methodDescriptorDelete);
  }

  methodDescriptorList = new grpcWeb.MethodDescriptor(
    '/entpb.ProjectService/List',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.ListProjectRequest,
    entpb_entpb_pb.ListProjectResponse,
    (request: entpb_entpb_pb.ListProjectRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.ListProjectResponse.deserializeBinary
  );

  list(
    request: entpb_entpb_pb.ListProjectRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.ListProjectResponse>;

  list(
    request: entpb_entpb_pb.ListProjectRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ListProjectResponse) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.ListProjectResponse>;

  list(
    request: entpb_entpb_pb.ListProjectRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ListProjectResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProjectService/List',
        request,
        metadata || {},
        this.methodDescriptorList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProjectService/List',
    request,
    metadata || {},
    this.methodDescriptorList);
  }

  methodDescriptorBatchCreate = new grpcWeb.MethodDescriptor(
    '/entpb.ProjectService/BatchCreate',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.BatchCreateProjectsRequest,
    entpb_entpb_pb.BatchCreateProjectsResponse,
    (request: entpb_entpb_pb.BatchCreateProjectsRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.BatchCreateProjectsResponse.deserializeBinary
  );

  batchCreate(
    request: entpb_entpb_pb.BatchCreateProjectsRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.BatchCreateProjectsResponse>;

  batchCreate(
    request: entpb_entpb_pb.BatchCreateProjectsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.BatchCreateProjectsResponse) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.BatchCreateProjectsResponse>;

  batchCreate(
    request: entpb_entpb_pb.BatchCreateProjectsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.BatchCreateProjectsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProjectService/BatchCreate',
        request,
        metadata || {},
        this.methodDescriptorBatchCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProjectService/BatchCreate',
    request,
    metadata || {},
    this.methodDescriptorBatchCreate);
  }

}

export class ProjectProcessServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/entpb.ProjectProcessService/Create',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.CreateProjectProcessRequest,
    entpb_entpb_pb.ProjectProcess,
    (request: entpb_entpb_pb.CreateProjectProcessRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.ProjectProcess.deserializeBinary
  );

  create(
    request: entpb_entpb_pb.CreateProjectProcessRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.ProjectProcess>;

  create(
    request: entpb_entpb_pb.CreateProjectProcessRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ProjectProcess) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.ProjectProcess>;

  create(
    request: entpb_entpb_pb.CreateProjectProcessRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ProjectProcess) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProjectProcessService/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProjectProcessService/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorGet = new grpcWeb.MethodDescriptor(
    '/entpb.ProjectProcessService/Get',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.GetProjectProcessRequest,
    entpb_entpb_pb.ProjectProcess,
    (request: entpb_entpb_pb.GetProjectProcessRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.ProjectProcess.deserializeBinary
  );

  get(
    request: entpb_entpb_pb.GetProjectProcessRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.ProjectProcess>;

  get(
    request: entpb_entpb_pb.GetProjectProcessRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ProjectProcess) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.ProjectProcess>;

  get(
    request: entpb_entpb_pb.GetProjectProcessRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ProjectProcess) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProjectProcessService/Get',
        request,
        metadata || {},
        this.methodDescriptorGet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProjectProcessService/Get',
    request,
    metadata || {},
    this.methodDescriptorGet);
  }

  methodDescriptorUpdate = new grpcWeb.MethodDescriptor(
    '/entpb.ProjectProcessService/Update',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.UpdateProjectProcessRequest,
    entpb_entpb_pb.ProjectProcess,
    (request: entpb_entpb_pb.UpdateProjectProcessRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.ProjectProcess.deserializeBinary
  );

  update(
    request: entpb_entpb_pb.UpdateProjectProcessRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.ProjectProcess>;

  update(
    request: entpb_entpb_pb.UpdateProjectProcessRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ProjectProcess) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.ProjectProcess>;

  update(
    request: entpb_entpb_pb.UpdateProjectProcessRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ProjectProcess) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProjectProcessService/Update',
        request,
        metadata || {},
        this.methodDescriptorUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProjectProcessService/Update',
    request,
    metadata || {},
    this.methodDescriptorUpdate);
  }

  methodDescriptorDelete = new grpcWeb.MethodDescriptor(
    '/entpb.ProjectProcessService/Delete',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.DeleteProjectProcessRequest,
    google_protobuf_empty_pb.Empty,
    (request: entpb_entpb_pb.DeleteProjectProcessRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  delete(
    request: entpb_entpb_pb.DeleteProjectProcessRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  delete(
    request: entpb_entpb_pb.DeleteProjectProcessRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  delete(
    request: entpb_entpb_pb.DeleteProjectProcessRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProjectProcessService/Delete',
        request,
        metadata || {},
        this.methodDescriptorDelete,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProjectProcessService/Delete',
    request,
    metadata || {},
    this.methodDescriptorDelete);
  }

  methodDescriptorList = new grpcWeb.MethodDescriptor(
    '/entpb.ProjectProcessService/List',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.ListProjectProcessRequest,
    entpb_entpb_pb.ListProjectProcessResponse,
    (request: entpb_entpb_pb.ListProjectProcessRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.ListProjectProcessResponse.deserializeBinary
  );

  list(
    request: entpb_entpb_pb.ListProjectProcessRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.ListProjectProcessResponse>;

  list(
    request: entpb_entpb_pb.ListProjectProcessRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ListProjectProcessResponse) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.ListProjectProcessResponse>;

  list(
    request: entpb_entpb_pb.ListProjectProcessRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ListProjectProcessResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProjectProcessService/List',
        request,
        metadata || {},
        this.methodDescriptorList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProjectProcessService/List',
    request,
    metadata || {},
    this.methodDescriptorList);
  }

  methodDescriptorBatchCreate = new grpcWeb.MethodDescriptor(
    '/entpb.ProjectProcessService/BatchCreate',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.BatchCreateProjectProcessesRequest,
    entpb_entpb_pb.BatchCreateProjectProcessesResponse,
    (request: entpb_entpb_pb.BatchCreateProjectProcessesRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.BatchCreateProjectProcessesResponse.deserializeBinary
  );

  batchCreate(
    request: entpb_entpb_pb.BatchCreateProjectProcessesRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.BatchCreateProjectProcessesResponse>;

  batchCreate(
    request: entpb_entpb_pb.BatchCreateProjectProcessesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.BatchCreateProjectProcessesResponse) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.BatchCreateProjectProcessesResponse>;

  batchCreate(
    request: entpb_entpb_pb.BatchCreateProjectProcessesRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.BatchCreateProjectProcessesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProjectProcessService/BatchCreate',
        request,
        metadata || {},
        this.methodDescriptorBatchCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProjectProcessService/BatchCreate',
    request,
    metadata || {},
    this.methodDescriptorBatchCreate);
  }

}

export class ProjectSkillsServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/entpb.ProjectSkillsService/Create',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.CreateProjectSkillsRequest,
    entpb_entpb_pb.ProjectSkills,
    (request: entpb_entpb_pb.CreateProjectSkillsRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.ProjectSkills.deserializeBinary
  );

  create(
    request: entpb_entpb_pb.CreateProjectSkillsRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.ProjectSkills>;

  create(
    request: entpb_entpb_pb.CreateProjectSkillsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ProjectSkills) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.ProjectSkills>;

  create(
    request: entpb_entpb_pb.CreateProjectSkillsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ProjectSkills) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProjectSkillsService/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProjectSkillsService/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorGet = new grpcWeb.MethodDescriptor(
    '/entpb.ProjectSkillsService/Get',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.GetProjectSkillsRequest,
    entpb_entpb_pb.ProjectSkills,
    (request: entpb_entpb_pb.GetProjectSkillsRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.ProjectSkills.deserializeBinary
  );

  get(
    request: entpb_entpb_pb.GetProjectSkillsRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.ProjectSkills>;

  get(
    request: entpb_entpb_pb.GetProjectSkillsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ProjectSkills) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.ProjectSkills>;

  get(
    request: entpb_entpb_pb.GetProjectSkillsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ProjectSkills) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProjectSkillsService/Get',
        request,
        metadata || {},
        this.methodDescriptorGet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProjectSkillsService/Get',
    request,
    metadata || {},
    this.methodDescriptorGet);
  }

  methodDescriptorUpdate = new grpcWeb.MethodDescriptor(
    '/entpb.ProjectSkillsService/Update',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.UpdateProjectSkillsRequest,
    entpb_entpb_pb.ProjectSkills,
    (request: entpb_entpb_pb.UpdateProjectSkillsRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.ProjectSkills.deserializeBinary
  );

  update(
    request: entpb_entpb_pb.UpdateProjectSkillsRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.ProjectSkills>;

  update(
    request: entpb_entpb_pb.UpdateProjectSkillsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ProjectSkills) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.ProjectSkills>;

  update(
    request: entpb_entpb_pb.UpdateProjectSkillsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ProjectSkills) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProjectSkillsService/Update',
        request,
        metadata || {},
        this.methodDescriptorUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProjectSkillsService/Update',
    request,
    metadata || {},
    this.methodDescriptorUpdate);
  }

  methodDescriptorDelete = new grpcWeb.MethodDescriptor(
    '/entpb.ProjectSkillsService/Delete',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.DeleteProjectSkillsRequest,
    google_protobuf_empty_pb.Empty,
    (request: entpb_entpb_pb.DeleteProjectSkillsRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  delete(
    request: entpb_entpb_pb.DeleteProjectSkillsRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  delete(
    request: entpb_entpb_pb.DeleteProjectSkillsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  delete(
    request: entpb_entpb_pb.DeleteProjectSkillsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProjectSkillsService/Delete',
        request,
        metadata || {},
        this.methodDescriptorDelete,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProjectSkillsService/Delete',
    request,
    metadata || {},
    this.methodDescriptorDelete);
  }

  methodDescriptorList = new grpcWeb.MethodDescriptor(
    '/entpb.ProjectSkillsService/List',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.ListProjectSkillsRequest,
    entpb_entpb_pb.ListProjectSkillsResponse,
    (request: entpb_entpb_pb.ListProjectSkillsRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.ListProjectSkillsResponse.deserializeBinary
  );

  list(
    request: entpb_entpb_pb.ListProjectSkillsRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.ListProjectSkillsResponse>;

  list(
    request: entpb_entpb_pb.ListProjectSkillsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ListProjectSkillsResponse) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.ListProjectSkillsResponse>;

  list(
    request: entpb_entpb_pb.ListProjectSkillsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ListProjectSkillsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProjectSkillsService/List',
        request,
        metadata || {},
        this.methodDescriptorList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProjectSkillsService/List',
    request,
    metadata || {},
    this.methodDescriptorList);
  }

  methodDescriptorBatchCreate = new grpcWeb.MethodDescriptor(
    '/entpb.ProjectSkillsService/BatchCreate',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.BatchCreateProjectSkillsSliceRequest,
    entpb_entpb_pb.BatchCreateProjectSkillsSliceResponse,
    (request: entpb_entpb_pb.BatchCreateProjectSkillsSliceRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.BatchCreateProjectSkillsSliceResponse.deserializeBinary
  );

  batchCreate(
    request: entpb_entpb_pb.BatchCreateProjectSkillsSliceRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.BatchCreateProjectSkillsSliceResponse>;

  batchCreate(
    request: entpb_entpb_pb.BatchCreateProjectSkillsSliceRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.BatchCreateProjectSkillsSliceResponse) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.BatchCreateProjectSkillsSliceResponse>;

  batchCreate(
    request: entpb_entpb_pb.BatchCreateProjectSkillsSliceRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.BatchCreateProjectSkillsSliceResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.ProjectSkillsService/BatchCreate',
        request,
        metadata || {},
        this.methodDescriptorBatchCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.ProjectSkillsService/BatchCreate',
    request,
    metadata || {},
    this.methodDescriptorBatchCreate);
  }

}

export class SkillServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/entpb.SkillService/Create',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.CreateSkillRequest,
    entpb_entpb_pb.Skill,
    (request: entpb_entpb_pb.CreateSkillRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.Skill.deserializeBinary
  );

  create(
    request: entpb_entpb_pb.CreateSkillRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.Skill>;

  create(
    request: entpb_entpb_pb.CreateSkillRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.Skill) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.Skill>;

  create(
    request: entpb_entpb_pb.CreateSkillRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.Skill) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.SkillService/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.SkillService/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorGet = new grpcWeb.MethodDescriptor(
    '/entpb.SkillService/Get',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.GetSkillRequest,
    entpb_entpb_pb.Skill,
    (request: entpb_entpb_pb.GetSkillRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.Skill.deserializeBinary
  );

  get(
    request: entpb_entpb_pb.GetSkillRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.Skill>;

  get(
    request: entpb_entpb_pb.GetSkillRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.Skill) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.Skill>;

  get(
    request: entpb_entpb_pb.GetSkillRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.Skill) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.SkillService/Get',
        request,
        metadata || {},
        this.methodDescriptorGet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.SkillService/Get',
    request,
    metadata || {},
    this.methodDescriptorGet);
  }

  methodDescriptorUpdate = new grpcWeb.MethodDescriptor(
    '/entpb.SkillService/Update',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.UpdateSkillRequest,
    entpb_entpb_pb.Skill,
    (request: entpb_entpb_pb.UpdateSkillRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.Skill.deserializeBinary
  );

  update(
    request: entpb_entpb_pb.UpdateSkillRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.Skill>;

  update(
    request: entpb_entpb_pb.UpdateSkillRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.Skill) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.Skill>;

  update(
    request: entpb_entpb_pb.UpdateSkillRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.Skill) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.SkillService/Update',
        request,
        metadata || {},
        this.methodDescriptorUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.SkillService/Update',
    request,
    metadata || {},
    this.methodDescriptorUpdate);
  }

  methodDescriptorDelete = new grpcWeb.MethodDescriptor(
    '/entpb.SkillService/Delete',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.DeleteSkillRequest,
    google_protobuf_empty_pb.Empty,
    (request: entpb_entpb_pb.DeleteSkillRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  delete(
    request: entpb_entpb_pb.DeleteSkillRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  delete(
    request: entpb_entpb_pb.DeleteSkillRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  delete(
    request: entpb_entpb_pb.DeleteSkillRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.SkillService/Delete',
        request,
        metadata || {},
        this.methodDescriptorDelete,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.SkillService/Delete',
    request,
    metadata || {},
    this.methodDescriptorDelete);
  }

  methodDescriptorList = new grpcWeb.MethodDescriptor(
    '/entpb.SkillService/List',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.ListSkillRequest,
    entpb_entpb_pb.ListSkillResponse,
    (request: entpb_entpb_pb.ListSkillRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.ListSkillResponse.deserializeBinary
  );

  list(
    request: entpb_entpb_pb.ListSkillRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.ListSkillResponse>;

  list(
    request: entpb_entpb_pb.ListSkillRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ListSkillResponse) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.ListSkillResponse>;

  list(
    request: entpb_entpb_pb.ListSkillRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ListSkillResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.SkillService/List',
        request,
        metadata || {},
        this.methodDescriptorList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.SkillService/List',
    request,
    metadata || {},
    this.methodDescriptorList);
  }

  methodDescriptorBatchCreate = new grpcWeb.MethodDescriptor(
    '/entpb.SkillService/BatchCreate',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.BatchCreateSkillsRequest,
    entpb_entpb_pb.BatchCreateSkillsResponse,
    (request: entpb_entpb_pb.BatchCreateSkillsRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.BatchCreateSkillsResponse.deserializeBinary
  );

  batchCreate(
    request: entpb_entpb_pb.BatchCreateSkillsRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.BatchCreateSkillsResponse>;

  batchCreate(
    request: entpb_entpb_pb.BatchCreateSkillsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.BatchCreateSkillsResponse) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.BatchCreateSkillsResponse>;

  batchCreate(
    request: entpb_entpb_pb.BatchCreateSkillsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.BatchCreateSkillsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.SkillService/BatchCreate',
        request,
        metadata || {},
        this.methodDescriptorBatchCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.SkillService/BatchCreate',
    request,
    metadata || {},
    this.methodDescriptorBatchCreate);
  }

}

export class SkillTypeServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/entpb.SkillTypeService/Create',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.CreateSkillTypeRequest,
    entpb_entpb_pb.SkillType,
    (request: entpb_entpb_pb.CreateSkillTypeRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.SkillType.deserializeBinary
  );

  create(
    request: entpb_entpb_pb.CreateSkillTypeRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.SkillType>;

  create(
    request: entpb_entpb_pb.CreateSkillTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.SkillType) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.SkillType>;

  create(
    request: entpb_entpb_pb.CreateSkillTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.SkillType) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.SkillTypeService/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.SkillTypeService/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorGet = new grpcWeb.MethodDescriptor(
    '/entpb.SkillTypeService/Get',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.GetSkillTypeRequest,
    entpb_entpb_pb.SkillType,
    (request: entpb_entpb_pb.GetSkillTypeRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.SkillType.deserializeBinary
  );

  get(
    request: entpb_entpb_pb.GetSkillTypeRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.SkillType>;

  get(
    request: entpb_entpb_pb.GetSkillTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.SkillType) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.SkillType>;

  get(
    request: entpb_entpb_pb.GetSkillTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.SkillType) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.SkillTypeService/Get',
        request,
        metadata || {},
        this.methodDescriptorGet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.SkillTypeService/Get',
    request,
    metadata || {},
    this.methodDescriptorGet);
  }

  methodDescriptorUpdate = new grpcWeb.MethodDescriptor(
    '/entpb.SkillTypeService/Update',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.UpdateSkillTypeRequest,
    entpb_entpb_pb.SkillType,
    (request: entpb_entpb_pb.UpdateSkillTypeRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.SkillType.deserializeBinary
  );

  update(
    request: entpb_entpb_pb.UpdateSkillTypeRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.SkillType>;

  update(
    request: entpb_entpb_pb.UpdateSkillTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.SkillType) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.SkillType>;

  update(
    request: entpb_entpb_pb.UpdateSkillTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.SkillType) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.SkillTypeService/Update',
        request,
        metadata || {},
        this.methodDescriptorUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.SkillTypeService/Update',
    request,
    metadata || {},
    this.methodDescriptorUpdate);
  }

  methodDescriptorDelete = new grpcWeb.MethodDescriptor(
    '/entpb.SkillTypeService/Delete',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.DeleteSkillTypeRequest,
    google_protobuf_empty_pb.Empty,
    (request: entpb_entpb_pb.DeleteSkillTypeRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  delete(
    request: entpb_entpb_pb.DeleteSkillTypeRequest,
    metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  delete(
    request: entpb_entpb_pb.DeleteSkillTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  delete(
    request: entpb_entpb_pb.DeleteSkillTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.SkillTypeService/Delete',
        request,
        metadata || {},
        this.methodDescriptorDelete,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.SkillTypeService/Delete',
    request,
    metadata || {},
    this.methodDescriptorDelete);
  }

  methodDescriptorList = new grpcWeb.MethodDescriptor(
    '/entpb.SkillTypeService/List',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.ListSkillTypeRequest,
    entpb_entpb_pb.ListSkillTypeResponse,
    (request: entpb_entpb_pb.ListSkillTypeRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.ListSkillTypeResponse.deserializeBinary
  );

  list(
    request: entpb_entpb_pb.ListSkillTypeRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.ListSkillTypeResponse>;

  list(
    request: entpb_entpb_pb.ListSkillTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ListSkillTypeResponse) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.ListSkillTypeResponse>;

  list(
    request: entpb_entpb_pb.ListSkillTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.ListSkillTypeResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.SkillTypeService/List',
        request,
        metadata || {},
        this.methodDescriptorList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.SkillTypeService/List',
    request,
    metadata || {},
    this.methodDescriptorList);
  }

  methodDescriptorBatchCreate = new grpcWeb.MethodDescriptor(
    '/entpb.SkillTypeService/BatchCreate',
    grpcWeb.MethodType.UNARY,
    entpb_entpb_pb.BatchCreateSkillTypesRequest,
    entpb_entpb_pb.BatchCreateSkillTypesResponse,
    (request: entpb_entpb_pb.BatchCreateSkillTypesRequest) => {
      return request.serializeBinary();
    },
    entpb_entpb_pb.BatchCreateSkillTypesResponse.deserializeBinary
  );

  batchCreate(
    request: entpb_entpb_pb.BatchCreateSkillTypesRequest,
    metadata: grpcWeb.Metadata | null): Promise<entpb_entpb_pb.BatchCreateSkillTypesResponse>;

  batchCreate(
    request: entpb_entpb_pb.BatchCreateSkillTypesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.BatchCreateSkillTypesResponse) => void): grpcWeb.ClientReadableStream<entpb_entpb_pb.BatchCreateSkillTypesResponse>;

  batchCreate(
    request: entpb_entpb_pb.BatchCreateSkillTypesRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: entpb_entpb_pb.BatchCreateSkillTypesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/entpb.SkillTypeService/BatchCreate',
        request,
        metadata || {},
        this.methodDescriptorBatchCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/entpb.SkillTypeService/BatchCreate',
    request,
    metadata || {},
    this.methodDescriptorBatchCreate);
  }

}

